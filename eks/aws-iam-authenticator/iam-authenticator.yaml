# IAM-Authenticator runs on EKS control plane by getting info from aws-auth
# configMap
# JSON Policy element: Principal
# IAM Principal that creates the cluster is automatically granted the 
# permission of system:masters in RBAC 

# To grant more IAM principals the ability to interact with the cluster
# edit the aws-auth configMap and create the roleBinding or clusterRoleBinding
# with the name of the group that was specified in the aws-auth configMap.
kubectl describe -n kube-system configmap/aws-auth
# Roles/roleBindings or clusterRole/clusterRoleBindings 
kubectl describe rolebinding role-binding-name -n kube-system
---
# AWS IAM Authenticator for Kubernetes

# Step 1
# Create IAM role that can be assumed by authorized users, give an AWS entity in "Principal" and permission to "AssumeRole" in "Action"
# create a role named KubernetesAdmin (will print the new role's ARN)
aws iam create-role \
  --role-name KubernetesAdmin \
  --description "Kubernetes administrator role (for AWS IAM Authenticator for Kubernetes)." \
  --assume-role-policy-document "$POLICY" \
  --output text \
  --query 'Role.Arn'

# Step 2
# Run the server of iam-authenticator on master nodes as a daemon-set